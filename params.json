{"name":"DeploYii","tagline":"Yii powered task runner and deployment solution","body":"[![Latest Stable Version](https://poser.pugx.org/giovdk21/deployii/v/stable.svg)](https://packagist.org/packages/giovdk21/deployii) [![License](https://poser.pugx.org/giovdk21/deployii/license.svg)](https://packagist.org/packages/giovdk21/deployii)\r\n\r\n(once ready) you'll be able to use DeploYii either as a simple task runner to automate your project setup and configuration\r\nor as deployment solution to package and deploy your code.\r\n\r\n\r\nRequirements\r\n-------------\r\n\r\n- PHP 5.4+\r\n- [Composer](https://getcomposer.org/)\r\n- Git (command line)\r\n\r\n\r\nGetting started\r\n-------------\r\n\r\n1. get DeploYii: `composer create-project giovdk21/deployii deployii ~0.5`\r\n2. go inside the deployii folder (`cd deployii/`)\r\n3. run `./deployii` to check the available options\r\n4. run `./deployii fetch example_basic` to try out the basic example\r\n5. run `./deployii run ~/.deployii/workspace/example_basic_[...]/basicExample/` to run it again, without re-downloading it\r\n6. run `./deployii run ~/.deployii/workspace/example_basic_[...]/basicExample/ clean` to run the clean target\r\n7. run `./deployii init ~/.deployii/workspace/helloWorld/` to create a new build script\r\n\r\n**For more information see the documentation on the [wiki](https://github.com/giovdk21/deployii/wiki).**\r\n\r\n```php\r\nreturn [\r\n\r\n  'deployiiVersion' => '0.5.0',\r\n\r\n  'require' => [],\r\n\r\n  'params' => [\r\n    'username' => 'world',\r\n  ],\r\n\r\n  'targets' => [\r\n    'default' => [\r\n      ['out', 'Hello {{username}}!'],\r\n    ],\r\n  ],\r\n];\r\n```\r\n\r\n...want to see more? [Click here](https://github.com/giovdk21/deployii-examples/blob/master/basicExample/deployii/build.php) :wink:\r\n\r\nAvailable features\r\n-------------\r\n\r\n- build script based on a simple PHP array\r\n- fetch your code from git and store it into a unique workspace directory\r\n- build script parameters\r\n- build script requirements\r\n- user defined command and recipes\r\n- output text to the user\r\n- require user input (prompt, confirm and select between multiple values)\r\n- non interactive mode\r\n- override default parameters with command line options\r\n- save / load information from json files\r\n- if / else statement\r\n- replace placeholders with build parameters values (both strings and arrays are supported)\r\n- check the build script compatibility with the current DeploYii version and return the list of non-backward compatible changes\r\n- call a target from another (chaining)\r\n- execute shell commands\r\n- copy file\r\n- copy folders\r\n- create folder\r\n- remove file\r\n- remove folder (recursive)\r\n- move files and folders\r\n- set files and folders permissions\r\n- archive/compress files and folders\r\n- SFTP support (put, get, mkdir, chmod, mv, rm, rmdir, ...)\r\n- SFTP authentication via RSA key\r\n- SFTP exec (exec remote command via ssh)\r\n- FTP support (passive mode only)\r\n- multiple SFTP / FTP connections\r\n- replace in files\r\n- script command to fetch (clone) from git\r\n- path aliases to the workspace and the build script folders\r\n- parameters placeholders also work in paths\r\n- build execution log\r\n- dry run mode\r\n\r\n\r\n\r\nPlanned features\r\n-------------\r\n\r\n- command to run composer which downloads it if not present\r\n- command to self update DeploYii\r\n- codeception related commands\r\n- other CI related commands\r\n- JS and CSS minification and concatenation\r\n- workspaces cleanup\r\n- project management user interface\r\n- database based project information\r\n- etc.\r\n\r\n\r\nCommunity\r\n-------------\r\n\r\n* Chat: [![Gitter chat](https://badges.gitter.im/giovdk21/deployii.png)](https://gitter.im/giovdk21/deployii)\r\n* Forum thread: [DeploYii on the Yii forum](http://www.yiiframework.com/forum/index.php/topic/56289-deployii-task-runner-and-deployment-pre-release/)\r\n","google":"UA-8760965-7","note":"Don't delete this file! It's used internally to help with page regeneration."}